name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  HUGO_VERSION: 0.147.8
  GO_VERSION: 1.19
  CONTENT_PATH: "content"
  baseURL: "https://cc.coolshell.in/"  # 固定baseURL

jobs:
  deploy:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    
    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install Hugo dependencies
        run: |
          echo "更新 Hugo 模块..."
          git submodule update --init --recursive
          
          echo "项目目录结构:"
          ls -la
          echo "主题目录内容:"
          ls -la themes/hugo-book

      - name: Build site
        run: |
          echo "使用 Hugo 版本: $(hugo version)"
          # 修复目录权限
          chmod -R 755 $GITHUB_WORKSPACE/content
          
          # 创建public目录确保存在
          mkdir -p public
          
          # 构建前清理缓存
          rm -rf public/ resources/
          
          # 构建并忽略特定警告
          hugo --gc --minify --baseURL "${{ env.baseURL }}" --ignoreVendorPaths "**/migrate-from-jekyll/**" --cleanDestinationDir
          
          # 强制创建.nojekyll文件
          touch public/.nojekyll
          
          # 双重验证
          [ -f public/index.html ] || (echo "错误: index.html 未生成"; exit 1)
          [ -f public/.nojekyll ] || (echo "错误: .nojekyll 文件未生成"; exit 1)

          # 确保CNAME文件被包含
          cp static/CNAME public/ 2>/dev/null || true
          
      - name: Verify baseURL
        run: |
          echo "验证资源路径中的baseURL配置"
          echo "检查HTML文件中的localhost引用："
          find public -type f -name "*.html" -exec grep -l "localhost:1313" {} \;
          ! find public -type f -name "*.html" -exec grep -l "localhost:1313" {} \; | grep -q .
          grep -r "${{ env.baseURL }}" public/ | head -5
          [ -f public/book.min.*.css ] || (echo "错误: 主题CSS文件未生成"; exit 1)
          
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          branch: gh-pages
          keep_files: true # 保留已有文件
          force_orphan: false  # 禁用强制清空历史